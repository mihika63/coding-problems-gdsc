#include <iostream>
using namespace std;

int findPeakElement(int arr[], int n) {
    int low = 0;
    int high = n - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        // Check if mid is a peak
        if ((mid == 0 || arr[mid] >= arr[mid - 1]) && (mid == n - 1 || arr[mid] >= arr[mid + 1])) {
            return arr[mid];
        }

        // If the element to the right of mid is greater, move to the right
        if (mid < n - 1 && arr[mid] < arr[mid + 1]) {
            low = mid + 1;
        }
        // Otherwise, move to the left
        else {
            high = mid - 1;
        }
    }

    // If no peak is found, return -1 or handle it as needed
    return -1;
}

int main() {
    int arr[] = {1, 3, 20, 4, 1, 0};
    int n = sizeof(arr) / sizeof(arr[0]);

    int peak = findPeakElement(arr, n);

    if (peak != -1) {
        cout << "Peak element is: " << peak << endl;
    } else {
        cout << "No peak element found in the array." << endl;
    }

    return 0;
}
